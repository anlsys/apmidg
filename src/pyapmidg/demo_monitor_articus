#!/usr/bin/env python3

import time, sys
import re
from subprocess import Popen, PIPE, STDOUT

import pyapmidg
import clr_rapl
import keypress

def read_boardpower_arcticus():
    watt = 0
    p = Popen('sudo ipmi-sensors --comma-separated-output -r 22,23', stdout = PIPE, stderr = STDOUT, shell = True)
    for l in p.stdout:
        res = l.decode().split(',')
        if len(res) > 5:
            if (res[1].find('Input Power') > 0) :
                watt = watt + float(res[3])
    return watt

def monitor(pm, ndevs, fn, powercap_W=0, maxreq_MHz=0.0):
    print("")
    print("Test monitoring articus")

    rr = clr_rapl.rapl_reader()

    kp = keypress.keypress()
    kp.enable()
    starttime = time.time()

    devnpwrdoms = []
    devnfreqdoms = []
    devntempsensors = []
    for devid in range(0, ndevs):
        devnpwrdoms.append(pm.getnpwrdoms(devid))
        devnfreqdoms.append(pm.getnfreqdoms(devid))
        devntempsensors.append(pm.getntempsensors(devid))

    for devid in range(0, ndevs):
        for pwrid in range(0, devnpwrdoms[devid]):
            if (powercap_W > 0):
                pm.setpwrlim(devid, pwrid, powercap_W*1000)
        for freqid in range(0, devnfreqdoms[devid]):
            if (maxreq_MHz > 0.0):
                flims = pm.getfreqlims(devid, freqid)
                flims.max_MHz = maxreq_MHz
                pm.setfreqlims(devid, freqid, flims.min_MHz, flims.max_MHz)

    with open(fn, 'w') as f:
        while True:
            # read all sensors
            curt = time.time()
            s = "%lf %lf GPU   " % (curt, curt - starttime)
            for devid in range(0, ndevs):
                for pwrid in range(0, devnpwrdoms[devid]):
#                    plim = pm.getpwrlim(devid, pwrid)/1000.
#                    s += "%.1lf " % plim
                    ptmp = pm.readpoweravg(devid, pwrid)
                    s += "%.1lf " % ptmp
                s += " "
#                for freqid in range(0, devnfreqdoms[devid]):
#                    flims = pm.getfreqlims(devid, freqid)
#                    s += "%d " % (int(flims.max_MHz))
#                    ftmp = pm.readfreq(devid, freqid)
#                    s += "%d " % int(ftmp)
#                s += " "
#                for tempid in range(0, devntempsensors[devid]):
#                    ttmp = pm.readtemp(devid, tempid)
#                    s += "%.1lf " % ttmp
                s += "   "
            f.write(s + "\n")
            print(s)
            # IPMI
            curt = time.time()
            s = "%lf %lf BOARD " % (curt, curt - starttime)
            s += "%.1lf" % read_boardpower_arcticus()
            f.write(s + "\n")
            print(s)
            # RAPL
            curt = time.time()
            s = "%lf %lf CPU   " % (curt, curt - starttime)
            s += "%.1lf" % rr.sample()['power']['total']
            f.write(s + "\n")
            print(s)
            #
            if kp.readkey() == 'q':
                break
            time.sleep(.5)
    kp.disable()


if __name__ == '__main__':
    pm = pyapmidg.clr_apmidg()
    ndevs = pm.getndevs()

    monitor(pm, ndevs, 'output_clr_apmidg.txt', 0, 0.0)

    print("reset setting")
    pm.reset2default()

    print("done")
